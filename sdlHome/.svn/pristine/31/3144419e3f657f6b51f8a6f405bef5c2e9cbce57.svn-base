package sdl.sdlHome;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.junit.Test;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

import sdl.sdlHome.domain.EntryId;
import sdl.sdlHome.domain.Hit;
import sdl.sdlHome.service.TerminologyService;
import sdl.sdlHome.service.impl.TerminologyServiceImpl;
import sdl.sdlHome.util.JerseyClient;

/**
 * 
 * @author alvin
 *
 */
public class ClientTest {
	// public static MultivaluedMap<String, String> parseJSON2Map(String jsonStr) {
	// MultivaluedMap<String, String> multivaluedMap = new MultivaluedMapImpl();
	//
	// System.out.println("jsonStr:" + jsonStr);
	// JSONObject json = JSON.parseObject(jsonStr);// 字符串转换为JSON对象
	//
	// for (Map.Entry<String, Object> entry : json.entrySet()) {
	// String jsonValue = entry.getValue().toString();// 获取JSON对象value并转换为String
	// if (jsonValue.contains(",")) {
	// String[] arr = jsonValue.split(","); // 用,分割成数组
	// for (String subValue : arr) {
	// multivaluedMap.add(entry.getKey(), subValue);
	// }
	// } else {
	// multivaluedMap.add(entry.getKey(), jsonValue);
	// }
	// }
	// return multivaluedMap;
	// }

	@Test
	public void staticTest() {
		String token = JerseyClient.getToken("/sdl/v1.0/token", "Kevin", "123456");
		System.out.println("token=" + token);
		JSONObject jsonObject = JerseyClient.getMethod("/sdl/v1.0/search", token, "{'term':'bolt','sourceLanguageIds':2}");
		JSONArray entryArray = jsonObject.getJSONArray("entries");
		
		for (Object object : entryArray) {
			JSONObject entry = (JSONObject)object;
			JSONArray languageArray = entry.getJSONArray("languages");
			for (Object object2 : languageArray) {
				JSONObject language = (JSONObject) object2;
				JSONArray termArray = language.getJSONArray("terms");
				for (Object object3 : termArray) {
					JSONObject term = (JSONObject)object3;
					System.out.println("术语id："+term.getString("id"));
					System.out.println("术语名："+term.getString("term"));
					System.out.println("术语是否已删除："+term.getString("isDeleted"));
					JSONObject termstamp=(JSONObject)term.get("stamp");
					System.out.println(termstamp.toJSONString());
					JSONArray termsFieldArray = term.getJSONArray("fields");
					if (termsFieldArray != null) {
						for (Object object4 : termsFieldArray) {
							JSONObject field = (JSONObject)object4;
							System.out.println(field.toJSONString());
						}
					}
					System.out.println("========");
				}
//				JSONArray fields_array = language.getJSONArray("fields");
//				for (Object object4 : fields_array) {
//					JSONObject fields=(JSONObject) object4;
//					System.out.println(fields.toJSONString());
//				}
			}
		}
	}

	@Test
	public void testService() {
		TerminologyService termService = new TerminologyServiceImpl();

		String token = termService.getToken("Kevin", "123456");
		JSONArray hitsArray = termService.search(token, "bolt", 2);

		System.out.println(hitsArray);

		List<Hit> hitlist = new ArrayList<Hit>();
		for (Iterator<Object> iterator = hitsArray.iterator(); iterator.hasNext();) {
			JSONObject jsonObj = (JSONObject) iterator.next();

			JSONObject entryIdObject = (JSONObject) jsonObj.get("entryId");
			EntryId entryId = new EntryId();
			entryId.setId(entryIdObject.getIntValue("id"));
			entryId.setUuid(entryIdObject.getString("uuid"));

			Hit hit = new Hit();
			hit.setLanguageId(jsonObj.getIntValue("languageId"));
			hit.setScore(jsonObj.getIntValue("score"));
			hit.setSimilarity(jsonObj.getIntValue("similarity"));
			hit.setTerm(jsonObj.getString("term"));
			hit.setTermbaseId(jsonObj.getIntValue("termbaseId"));
			hit.setEntryId(entryId);
			hitlist.add(hit);
		}
		for (Hit hit : hitlist) {
			System.out.println(hit.getTerm());
		}
	}
}
