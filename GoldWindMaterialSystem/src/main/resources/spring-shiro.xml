<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<description>Shiro Components</description>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!--cookie的name -->
		<constructor-arg value="goldwind_cookie_name" />
		<property name="httpOnly" value="true" />
		<!--Cookie失效的时间,单位秒,默认为-1。
			如果为整数,则该Cookie在maxAge秒后失效;
			如果为负数,该Cookie为临时Cookie,关闭浏览器即失效,浏览器也不会以任何形式保存该Cookie;
			如果为0,表示删除该Cookie;
		-->
		<property name="maxAge" value="-1" />
		<!-- 可以访问该Cookie的域名,注意第一个字符必须为“.”:
			如果设置为“.google.com”,则所有以“google.com”结尾的域名都可以访问该Cookie。
		 	<property name="domain" value=".goldwind.com.cn"/>
		-->
	</bean>
	
	<!-- ===========rememberMe相关配置:rememberMeCookie,rememberMe管理器=========== -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="goldwind_cookie_name_rememberme" />
		<property name="httpOnly" value="true" />
		<!-- 记住我30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥,建议每个项目都不一样,默认AES算法,密钥长度（128 256 512 位） -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('3AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- ===========rememberMe相关配置:rememberMeCookie,rememberMe管理器=========== -->

	<!-- redis缓存管理器 -->
	<bean id="jedisManager" class="com.sojson.core.shiro.cache.JedisManager">
		<property name="jedisPool" ref="jedisPool" />
	</bean>

	<!-- session 创建+删除+查询 -->
	<bean id="jedisShiroSessionRepository" class="com.sojson.core.shiro.cache.JedisShiroSessionRepository">
		<property name="jedisManager" ref="jedisManager" />
	</bean>
	<!-- shiro会话监听 -->
	<bean id="customSessionListener" class="com.sojson.core.shiro.listenter.CustomSessionListener">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
	</bean>

	<!-- shiro Session操作 -->
	<bean id="customShiroSessionDAO" class="com.sojson.core.shiro.CustomShiroSessionDAO">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	<!-- 手动操作管理Session -->
	<bean id="customSessionManager" class="com.sojson.core.shiro.session.CustomSessionManager">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="customShiroSessionDAO" ref="customShiroSessionDAO" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 相隔多久检查一次session的有效性 -->
		<property name="sessionValidationInterval" value="1800000" />
		<!-- session 有效时间为半小时(毫秒单位） -->
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionDAO" ref="customShiroSessionDAO" />
		<!-- session 监听,可以监听多个 -->
		<property name="sessionListeners">
			<list>
				<ref bean="customSessionListener" />
			</list>
		</property>
		<!-- 间隔多少时间检查，不配置是60分钟 -->
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<!-- 是否开启 检测，默认开启 -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- 是否删除无效的，默认也是开启 -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 会话Cookie模板 -->
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<!-- 间隔多少时间检查,不配置是60分钟 -->
		<property name="interval" value="${session.validate.timespan}" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- shiro缓存管理器,采用redis的实现 -->
	<bean id="jedisShiroCacheManager" class="com.sojson.core.shiro.cache.impl.JedisShiroCacheManager">
		<property name="jedisManager" ref="jedisManager" />
	</bean>
	
	<!-- 用户缓存管理器 -->
	<bean id="customShiroCacheManager" class="com.sojson.core.shiro.cache.impl.CustomShiroCacheManager">
		<property name="shiroCacheManager" ref="jedisShiroCacheManager" />
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="sampleRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="cacheManager" ref="customShiroCacheManager" />
	</bean>
	
	<!-- ================静态注入================静态注入 -->
	<!-- 静态注入:相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	<!-- 静态注入 jedisShiroSessionRepository -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="com.sojson.core.shiro.filter.KickoutSessionFilter.setShiroSessionRepository" />
		<property name="arguments" ref="jedisShiroSessionRepository" />
	</bean>
	
	<!-- ==============session 校验单个用户是否多次登录start============== -->
	<bean id="kickoutSessionFilter" class="com.sojson.core.shiro.filter.KickoutSessionFilter">
		<property name="kickoutUrl" value="/u/login.shtml?kickout" />
	</bean>
	<!-- ==============session 校验单个用户是否多次登录end============== -->
	
	<!-- shiro授权+认证 -->
	<bean id="sampleRealm" class="com.sojson.core.shiro.token.SampleRealm"></bean>

	<!-- 自定义角色过滤器 支持多个角色可以访问同一个资源 eg:/home.jsp = authc,roleOR[admin,user] 用户有admin或者user角色 就可以访问 -->

	<!-- 认证数据库存储 -->
	<bean id="shiroManager" class="com.sojson.core.shiro.service.impl.ShiroManagerImpl" />
	<bean id="login" class="com.sojson.core.shiro.filter.LoginFilter" />
	<bean id="role" class="com.sojson.core.shiro.filter.RoleFilter" />
	<bean id="permission" class="com.sojson.core.shiro.filter.PermissionFilter" />
	<bean id="simple" class="com.sojson.core.shiro.filter.SimpleAuthFilter" />

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/u/login.shtml" />
		<!-- TODO 待提取 -->
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/?login" />

		<property name="filterChainDefinitions" value="#{shiroManager.loadFilterChainDefinitions()}" />
		<property name="filters">
			<util:map>
				<entry key="login" value-ref="login"></entry>
				<entry key="role" value-ref="role"></entry>
				<entry key="simple" value-ref="simple"></entry>
				<entry key="permission" value-ref="permission"></entry>
				<entry key="kickout" value-ref="kickoutSessionFilter"></entry>
			</util:map>
		</property>
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>