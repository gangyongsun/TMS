<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sojson.terminology.dao.OrderItemMapper">
	<resultMap id="BaseResultMap" type="com.sojson.terminology.bo.OrderItem">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="user_id" jdbcType="BIGINT" />
		<result column="item_id" property="item_id" jdbcType="VARCHAR" />
		<result column="order_id" property="order_id" jdbcType="VARCHAR" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="item_name" property="item_name" jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="total_fee" property="total_fee" jdbcType="DECIMAL" />
		<result column="pic_path" property="pic_path" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,user_id, item_id, order_id, num, item_name, price, total_fee, pic_path
	</sql>
	
	<sql id="limit_sql">
		<if test="page_sql != null and page_sql != ''">
			${page_sql}
		</if>
	</sql>

	<sql id="where_all">
		<where>
			<if test="user_id != null and user_id !='' ">
				and (
				user_id=#{user_id,jdbcType=BIGINT}
				)
			</if>
		</where>
	</sql>
	
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_order_item
		<include refid="where_all" />
		<include refid="limit_sql" />
	</select>
	
	<select id="findCount" resultMap="BaseResultMap">
		select count(id) from tb_order_item
		<include refid="where_all" />
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from tb_order_item where id = #{id,jdbcType=BIGINT}
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sojson.terminology.bo.OrderItem">
		insert into tb_order_item (
			id,
			user_id,
			item_id,
			order_id,
			num,
			item_name,
			price,
			total_fee,
			pic_path
		)
		values(
			#{id,jdbcType=BIGINT},
			#{user_id,jdbcType=BIGINT},
			 #{item_id,jdbcType=VARCHAR},
			#{order_id,jdbcType=VARCHAR},
			#{num,jdbcType=INTEGER},
			#{item_name,jdbcType=VARCHAR},
			#{price,jdbcType=DECIMAL},
			#{total_fee,jdbcType=DECIMAL},
			#{pic_path,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.sojson.terminology.bo.OrderItem">
		insert into tb_order_item
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="user_id != null">
				user_id,
			</if>
			<if test="item_id != null">
				item_id,
			</if>
			<if test="order_id != null">
				order_id,
			</if>
			<if test="num != null">
				num,
			</if>
			<if test="item_name != null">
				item_name,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="total_fee != null">
				total_fee,
			</if>
			<if test="pic_path != null">
				pic_path,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="user_id != null">
				#{user_id,jdbcType=BIGINT},
			</if>
			<if test="item_id != null">
				#{item_id,jdbcType=VARCHAR},
			</if>
			<if test="order_id != null">
				#{order_id,jdbcType=VARCHAR},
			</if>
			<if test="num != null">
				#{num,jdbcType=INTEGER},
			</if>
			<if test="item_name != null">
				#{item_name,jdbcType=VARCHAR}
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL}
			</if>
			<if test="total_fee != null">
				#{total_fee,jdbcType=DECIMAL}
			</if>
			<if test="pic_path != null">
				#{pic_path,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.sojson.terminology.bo.OrderItem">
		update tb_order_item
		<set>
			<if test="num != null">
				num = #{num,jdbcType=INTEGER},
			</if>
			<if test="order_id != null">
				order_id = #{order_id,jdbcType=VARCHAR},
			</if>
			<if test="total_fee != null">
				total_fee = #{total_fee,jdbcType=DECIMAL},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<update id="updateByPrimaryKey" parameterType="com.sojson.terminology.bo.OrderItem">
		update tb_order_item
		set
			num = #{num,jdbcType=INTEGER},
			order_id = #{order_id,jdbcType=VARCHAR},
			total_fee = #{total_fee,jdbcType=DECIMAL}
		where
			id = #{id,jdbcType=BIGINT}
	</update>
	
	<select id="findList" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List" />
		from 
			tb_order_item
		where
			user_id = #{user_id,jdbcType=BIGINT} and order_id is null
	</select>
	
	<select id="findListByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select 
		<include refid="Base_Column_List" />
		from 
			tb_order_item
		where
			order_id = #{order_id,jdbcType=VARCHAR}
	</select>
	
	<!--根据id列表查询-->
    <select id="findListByIds" resultMap="BaseResultMap">
        select 
		<include refid="Base_Column_List" />
		from 
			tb_order_item
		where 
			user_id = #{user_id} 
			and order_id is null 
			and id in
	        <foreach collection="ids" item="id" open="(" close=")" separator=",">
	            #{id}
	        </foreach>
    </select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from tb_order_item where id = #{id,jdbcType=BIGINT}
	</delete>
</mapper>
