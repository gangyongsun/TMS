<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.uploadAndDownload.fileUploadDemo.shiro.dao.SysRoleMapper">
	<resultMap id="BaseResultMap" type="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		<!-- WARNING - @mbg.generated -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
		<result column="role_type" property="roleType" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, role_desc, role_type
	</sql>

	<sql id="limit_sql">
		<if test="page_sql != null and page_sql != ''">
			${page_sql}
		</if>
	</sql>

	<sql id="where_all">
		<where>
			<if test="findContent != null and findContent !='' ">
				and (LOWER(role_desc) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or LOWER(role_type) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
			</if>
		</where>
	</sql>


	<select id="findRoleByUserId" resultType="java.lang.String">
		select r.role_type from sys_role r,sys_user_role sysRole where sysRole.role_id = r.id and sysRole.user_id =
		#{id,jdbcType=BIGINT}
	</select>
	<!-- 普通的分页查询 -->
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<include refid="where_all" />
		<include refid="limit_sql" />
	</select>
	<select id="findCount" resultMap="BaseResultMap">
		select count(id) from sys_role
		<include refid="where_all" />
	</select>

	<!-- 选择角色给用户，checkbox 列表 -->
	<select id="selectRoleByUserId" resultType="cn.com.uploadAndDownload.fileUploadDemo.shiro.bo.SysRoleBo">
		select sysRole.id,sysRole.role_desc,sysRole.role_type,ifnull(sysUserRole.user_id,0) marker from sys_role sysRole left
		join(select * from sys_user_role where user_id=#{id,jdbcType=BIGINT}) sysUserRole on sysUserRole.role_id
		= sysRole.id
	</select>

	<!-- 权限分配的分页查询 -->
	<select id="findRoleAndResources" resultType="cn.com.uploadAndDownload.fileUploadDemo.shiro.bo.RoleResourceAllocationBo">
		select sysRole.id,sysRole.role_type roleType,sysRole.role_desc roleDesc,group_concat(sysResource.resource_name) resourceNames,group_concat(sysResource.id)resourceIds from
		sys_role sysRole left join
		sys_role_resources sysRoleResource on sysRoleResource.role_id
		= sysRole.id left join
		sys_resources sysResource on sysResource.id = sysRoleResource.resources_id
		<where>
			<if test="findContent != null and findContent !='' ">
				and (LOWER(sysRole.role_desc) like CONCAT("%",#{findContent,jdbcType=VARCHAR},"%") or LOWER(sysRole.role_type) like
				CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
			</if>
		</where>
		group by sysRole.id
		<include refid="limit_sql" />
	</select>

	<!-- Mybatis 一对多 Demo begin -->

	<!-- 查询用户全部的role & permission -->
	<resultMap id="findNowAllPermission_resultMap" extends="BaseResultMap" type="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		<collection property="permissions" javaType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysResources">
			<id column="id" property="id" jdbcType="BIGINT" />
			<result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
			<result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<!-- 根据用户ID，查询所有权限 -->
	<select id="findNowAllPermission" resultMap="findNowAllPermission_resultMap">
		select sysRole.id,sysRole.role_desc,sysRole.role_type ,sysResource.id resourceId,sysResource.resource_url,sysResource.resource_name resourceName
		from
		(select role_id from sys_user_role where user_id =
		#{userId,jdbcType=BIGINT}) sysUserRole
		left join sys_role sysRole on sysUserRole.role_id = sysRole.id
		left join
		sys_role_resources sysRoleResource on sysRoleResource.role_id = sysRole.id
		left join sys_resources sysResource on sysResource.id =
		sysRoleResource.resources_id
	</select>
	<!-- Mybatis 一对多 Demo end -->

	<!-- <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_role
		where id = #{id,jdbcType=BIGINT}
	</delete> -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		insert into sys_role (id, name, type)
		values (#{id,jdbcType=BIGINT},
		#{name,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		update sys_role
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysRole">
		update sys_role
		set name = #{name,jdbcType=VARCHAR},
		type = #{type,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>