<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.uploadAndDownload.fileUploadDemo.shiro.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysUser">
		<!-- WARNING - @mbg.generated -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="pass_word" property="passWord" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickname" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="lastLogin_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
		<result column="user_enable" property="userEnable" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, pass_word, nick_name, create_time, lastLogin_time,user_enable
	</sql>
	<sql id="limit_sql">
		<if test="page_sql != null and page_sql != ''">
			${page_sql}
		</if>
	</sql>

	<sql id="where_all">
		<where>
			<if test="findContent != null and findContent !='' ">
				and (
				LOWER(nickname) like LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
				LOWER(user_name) like LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
				)
			</if>
		</where>
	</sql>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		<include refid="where_all" />
		<include refid="limit_sql" />
	</select>
	<select id="findCount" resultMap="BaseResultMap">
		select count(id) from sys_user
		<include refid="where_all" />
	</select>
	<!-- <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_user where id = #{id,jdbcType=BIGINT}
	</select> 
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_user where id = #{id,jdbcType=BIGINT}
	</delete>-->
	<!-- 根据帐号查询 -->
	<select id="findUserByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user where user_name = #{userName,jdbcType=VARCHAR}
	</select>
	
	<!-- 用户权限分配的分页查询 -->
	<select id="findUserAndRole" resultType="cn.com.uploadAndDownload.fileUploadDemo.shiro.bo.UserRoleAllocationBo">
		select sysUser.id,sysUser.nick_name nickname,sysUser.user_name userName,sysUser.user_enable userEnable,group_concat(sysRole.role_desc) roleNames,group_concat(sysRole.id)roleIds from
		sys_user sysUser
		left join sys_user_role sysUserRole on sysUserRole.user_id =
		sysUser.id
		left join sys_role sysRole on sysRole.id = sysUserRole.role_id
		<where>
			<if test="findContent != null and findContent !='' ">
				and (
				LOWER(sysUser.nick_name) like LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
				LOWER(sysUser.user_name) like LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
				)
			</if>
		</where>
		group by sysUser.id
	</select>
	<select id="selectRoleByUserId" resultType="cn.com.uploadAndDownload.fileUploadDemo.shiro.bo.SysRoleBo">
		select sysRole.id,sysRole.role_desc,sysRole.role_type,sysUserRole.user_id userId,ifnull(sysUserRole.user_id,0) marker from sys_role sysRole
		left join(select * from sys_user_role where
		user_id=#{id,jdbcType=BIGINT}) sysUserRole on sysUserRole.role_id = sysRole.id
		order by sysRole.id
	</select>
	<!-- 登录 -->
	<select id="login" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from u_user where user_name = #{userName,jdbcType=VARCHAR} and pass_word = #{passWord,jdbcType=VARCHAR}
	</select>
	<!-- <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="nickname != null">
				nick_name,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="passWord != null">
				pass_word,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastLoginTime != null">
				lastLogin_time,
			</if>
			<if test="userEnable != null">
				user_enable,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userEnable != null">
				#{userEnable,jdbcType=BIGINT}
			</if>
		</trim>
	</insert> -->
	<!-- <update id="updateByPrimaryKeySelective" parameterType="cn.com.uploadAndDownload.fileUploadDemo.shiro.domain.SysUser">
		update sys_user
		<set>
			<if test="nickname != null">
				nick_name = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				pass_word = #{passWord,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				lastLogin_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				user_enable = #{userEnable,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update> -->
</mapper>